stingeripc:
  version: 0.0.7

interface:
  name: Full
  version: 0.0.1
  title: Fully Featured Example Interface
  summary: Example StingerAPI interface which demonstrates most features.

brokers:
  local:
    host: 127.0.0.1
    port: 1883
    description: This talks to a locally running MQTT broker.

structures:

  lunch:
    members:
      - name: drink
        type: boolean
        documentation: Whether or not lunch comes with a drink
      - name: sandwich
        type: string
        documentation: The type of sandwich which will be served.
      - name: crackers
        type: float
        documentation: The number of crackers that come with lunch.
      - name: day
        type: enum
        enumName: dayOfTheWeek
      - name: order_number
        type: integer
        optional: true
      - name: time_of_lunch
        type: datetime
        documentation: The time when lunch is served.
      - name: duration_of_lunch
        type: duration
        documentation: The amount of time lunch lasts.

enums:

  dayOfTheWeek:
    description: The days of the week.
    values:
      - name: Sunday
        description: First day of the week.  The sabbath.
      - name: Monday
      - name: Tuesday
      - name: Wednesday
      - name: Thursday
      - name: Friday
      - name: Saturday

signals:
  
  todayIs:
    payload:
      - name: dayOfMonth
        type: integer
        documentation: The calendar day of the month.
      - name: dayOfWeek
        type: enum
        enumName: dayOfTheWeek
        optional: true
      - name: timestamp
        type: datetime
        documentation: The date and time when this signal was emitted.
      - name: process_time
        type: duration
        documentation: The amount of time it took to process this signal.
      - name: memory_segment
        type: binary
        documentation: A binary blob of data.

methods:

  addNumbers:
    arguments:
      - name: first
        type: integer
      - name: second
        type: integer
      - name: third
        type: integer
        optional: true
    returnValues:
      - name: sum
        type: integer

  doSomething:
    arguments:
      - name: aString
        type: string
    returnValues:
      - name: label
        type: string
      - name: identifier
        type: integer
      - name: day
        type: enum
        enumName: dayOfTheWeek

  echo:
    documentation: Echo back the received message.
    arguments:
      - name: message
        type: string
    returnValues:
      - name: message
        type: string

  what_time_is_it:
    documentation: Get the current date and time.
    arguments:
      - name: the_first_time
        type: datetime
    returnValues:
      - name: timestamp
        type: datetime

  set_the_time:
    arguments:
      - name: the_first_time
        type: datetime
      - name: the_second_time
        type: datetime
    returnValues:
      - name: timestamp
        type: datetime
      - name: confirmation_message
        type: string

  forward_time:
    documentation: This method takes a time and a duration, and returns the time plus the duration.
    arguments:
      - name: adjustment
        type: duration
    returnValues:
      - name: new_time
        type: datetime

  how_off_is_the_clock:
    documentation: Returns how far off the clock is from the actual time.
    arguments:
      - name: actual_time
        type: datetime
    returnValues:
      - name: difference
        type: duration

properties:

  favorite_number:
    documentation: |
      My favorite number
    values:
      - name: number
        type: integer

  favorite_foods:
    values:
      - name: drink
        type: string
      - name: slices_of_pizza
        type: integer
      - name: breakfast
        type: string
        optional: true

  lunch_menu:
    values:
      - name: monday
        type: struct
        structName: lunch
      - name: tuesday
        type: struct
        structName: lunch
        description: Tuesday's lunch menu.
  
  family_name:
    documentation: This is to test a property with a single string value.
    values:
      - name: family_name
        type: string

  last_breakfast_time:
    documentation: This is to test a property with a single datetime value.
    values:
      - name: timestamp
        type: datetime
  
  breakfast_length:
    documentation: This is to test a property with a single duration value.
    values:
      - name: length
        type: duration

  last_birthdays:
    documentation: This is to test a property with multiple datetime values.
    values:
      - name: mom
        type: datetime
      - name: dad
        type: datetime
      - name: sister
        type: datetime
        optional: true
      - name: brothers_age
        type: integer
        optional: true
        documentation: The age of my brothers in years.