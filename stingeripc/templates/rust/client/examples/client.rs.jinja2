use futures::{executor::block_on};
use {{stinger.name | snake_case}}_client::{{stinger.name}}Client;
use connection::Connection;


#[tokio::main]
async fn main() {
    block_on(async {
        {%set broker = stinger.get_example_broker()%}
        let connection = Connection::new_{{broker.class_name|snake_case}}().await.expect("Failed to create connection");
        let mut client = {{stinger.name}}Client::new(connection).await;
        {%for sig_name, sig in stinger.signals.items()%}
        let mut sig_rx = client.get_{{sig_name|snake_case}}_receiver();
        tokio::spawn(async move {
            loop {
                match sig_rx.recv().await {
                    Ok(payload) => {
                        println!("Received {{sig_name}} signal with payload: {:?}", payload);
                    },
                    Err(e) => {
                        eprintln!("Error receiving {{sig_name}} signal: {:?}", e);
                        break;
                    }
                }
            }
        });
        {%endfor%}
        client.process_loop().await;
    });
    // Ctrl-C to stop
}
