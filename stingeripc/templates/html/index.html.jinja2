<!DOCTYPE html>
<html>
  <head>
    <title>{{stinger.name}} Web Interface</title>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link href="https://cdn.jsdelivr.net/npm/@mdi/font@7.2.96/css/materialdesignicons.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="./styles.css" />
  </head>
  {%macro arglist(name, arg_list, ngmodel, ngprop, read_only) -%}
  <table class="arglist">>
  {%for arg in arg_list %}
      <tr>
        <td>{{ arg.name }}</td>
        <td>
        {%if arg.arg_type|lower == "argtype.primitive"%}
          <input {%if read_only%}disabled {%endif%}type="text" id="{{ name |snake_case}}-arg-{{ arg.name }}" ng-model="{{ngmodel}}['{{name|lowerCamelCase}}'].{{ngprop}}['{{ arg.name }}']" />
          {%elif arg.arg_type|lower == "argtype.enum"%}
          <select {%if read_only%}disabled {%endif%}id="{{ name |snake_case}}-arg-{{ arg.name }}" ng-model="{{ngmodel}}['{{name|lowerCamelCase}}'].{{ngprop}}['{{ arg.name }}']">
            {%for enum_value in arg.enum.values %}
            <option value="{{ loop.index }}">{{ enum_value }}</option>
            {%endfor%}
          </select>
          {%elif arg.arg_type|lower == "argtype.list"%}
          <input {%if read_only%}disabled {%endif%}type="text" id="{{ name |snake_case}}-arg-{{ arg.name }}" ng-model="{{ngmodel}}['{{name|lowerCamelCase}}'].{{ngprop}}['{{ arg.name }}']" placeholder="Comma-separated values" />
          {%elif arg.arg_type|lower == "argtype.struct"%}
          <div class="struct-arg">
            {{ arglist(arg.name, arg.members, "ngmodel + ['" + name|lowerCamelCase + "'].received", "", read_only) }}
          </div>
          {%else%}
          <input {%if read_only%}disabled {%endif%}type="text" id="{{ name |snake_case}}-arg-{{ arg.name }}" ng-model="{{ngmodel}}['{{name|lowerCamelCase}}'].{{ngprop}}['{{ arg.name }}']" placeholder="(unknown type)" />
          {%endif%} 
      </td>
    </tr>
  {%endfor%}
  </table>
  {%- endmacro %}
  <body ng-app="myApp" ng-controller="myCtrl">
    <div class="infobox-background" ng-show="!online || showoutput" id="offline">Connecting</div>

    <div class="interface-box">
      <h1>{{stinger.name}}</h1>
      <p>{{stinger.description}}</p>
    </div>

    {%for sig_name, sig in stinger.signals.items() %}
    <div class="component-box signal-box" id="signal-box-{{ sig_name }}">
        <h3 class="component-title signal-title">Signal: {{ sig_name }}</h3>
        <div class="component-doc signal-doc">{%if sig.documentation %}
{%markdown%}
{{ sig.documentation }}
{%endmarkdown%}
        {%endif%}
        </div>
        <div class="last-received signal-value">
        {{ arglist(sig_name, sig.arg_list, 'signals', 'received', true) }}
        </div>
    </div>
    {%endfor%}{# end signals loop #}

    {%for prop_name, prop in stinger.properties.items() %}
    <div class="component-box prop-box" id="prop-box-{{ prop_name }}">
        <h3 class="component-title prop-title">Property: {{ prop_name }}</h3>
        <div class="component-doc prop-doc">{%if prop.documentation %}
{%markdown%}
{{ prop.documentation }}
{%endmarkdown%}
        {%endif%}
        </div>
        <div class="last-received property-value">
          {{ arglist(prop_name, prop.arg_list, 'properties', 'received', prop.read_only) }}
        </div>
        {%if not prop.read_only %}
        <input type="button" value="Update" ng-click="updateProperty('{{ prop_name | lowerCamelCase }}')" />
        {%endif%}
    </div>
    {%endfor%} {# end properties loop #}

    {%for method_name, method in stinger.methods.items() %}
    <div class="component-box method-box" id="method-box-{{ method_name }}">
        <h3 class="component-title method-title">Method: {{ method_name }}</h3>
        <div class="component-doc method-doc">{%if method.documentation %}
{%markdown%}
{{ method.documentation }}
{%endmarkdown%}
        {%endif%}
        </div>
        <div class="method-form-box">
            <form ng-submit="{{method_name}}MethodCall()">
                {{ arglist(method_name, method.arg_list, 'methods', 'args', false) }}
                <button type="submit">Call {{ method_name }}</button>
            </form>
        </div>
        <div class="last-received method-response" ng-bind="methods['{{ method_name }}'].received">
        {{ arglist(method_name, method.return_values, 'methods', 'received', true) }}
        </div>
    </div>
    {%endfor%} {# end methods loop #}

    {%raw%}
    <div id="console" ng-class="{ 'expanded' : (console.showing) }">
      <div class="top" ng-click=" console.showing = !console.showing ">Request Console <span ng-show="console.showing && console.requests.length > 0" ng-click="console.requests = []"> - Clear</span>
        <p class="expanded-toggle">{{ console.showing ? 'Hide' : 'Show' }}</p>
      </div>
      <div id="request-list">
        <p ng-repeat="msg in console.requests" class="entry">
          <strong>{{msg.name}}:</strong> <em>{{msg.topic}}</em> <span class="elapsedTime" ng-show="msg.responseTime">{{msg.responseTime - msg.requestTime}}ms</span><span class="elapsedTime" ng-show="msg.eventTime">{{msg.eventTime}}</span>
          <span class="outgoing" ng-show="msg.payload">{{msg.payload}}</span>
          <span class="incoming" ng-show="msg.response">{{msg.response}}</span>
          <span ng-repeat="result in msg.results" class="action-result">{{result}}</span>
        </p>
      </div>
    </div>
    {%endraw%}

    <script src="https://cdnjs.cloudflare.com/ajax/libs/angular.js/1.8.2/angular.min.js"></script>
    <script src="https://unpkg.com/mqtt@5.14.0/dist/mqtt.min.js"></script>
    <script src="app.js"></script>
  </body>
</html>