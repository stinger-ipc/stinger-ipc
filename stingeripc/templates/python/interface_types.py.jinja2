"""
DO NOT MODIFY THIS FILE.  It is automatically generated and changes will be over-written
on the next generation.

It contains enumerations used by the {{stinger.name}} interface.
"""
from pydantic import BaseModel, Field
from datetime import datetime, timedelta
from typing import Optional
{%if stinger.uses_enums()%}from enum import IntEnum{%endif%}

class InterfaceInfo(BaseModel):
    interfaceName: str = Field(default="{{stinger.name}}")
    title: str = Field(default="{{stinger.title or stinger.name}}")
    version: str = Field(default="{{stinger.version}}")
    instance: str
    connection_topic: str
    timestamp: str

{%for ie_name, ie in stinger.enums.items() %}
class {{ie_name | UpperCamelCase }}(IntEnum):
    """ Interface enum `{{ie_name}}`."""
    {%-for value in ie.values %}
    {{value | CONST_CASE}} = {{loop.index}}
    {%-endfor%}
{%endfor%}

{%-for istruct_name, istruct in stinger.structs.items() %}
class {{istruct_name | UpperCamelCase }}(BaseModel):
    """ Interface struct `{{istruct_name}}`. """
    {%-for arg in istruct.members%}
    {{arg.name}}: {%if arg.optional%}Optional[{{arg.python_local_type}}]{%else%}{{arg.python_local_type}}{%endif%}
    {%-endfor%}
{%endfor%}

{%-for signal_name, signal in stinger.signals.items()%}
class {{signal_name|UpperCamelCase}}SignalPayload(BaseModel):
    """ Interface signal `{{signal_name}}`. {%if signal.documentation%}
    
    {{signal.documentation}}{%endif%}
    """
    {%-for arg in signal.arg_list%}
    {{arg.name}}: {%if arg.optional%}Optional[{{arg.python_local_type}}]{%else%}{{arg.python_local_type}}{%endif%}{%if arg.description%} = Field(description="{{arg.description}}"){%endif%}
    {%-endfor%}
{%endfor%}

{%-for method_name, method in stinger.methods.items()%}
{%-if method.return_value_type == 'struct'%}
class {{method.return_value_python_local_type}}(BaseModel):
    """ Interface method `{{method_name}}` return value struct. """
    {%-for arg in method.return_value.members%}
    {{arg.name}}: {%if arg.optional%}Optional[{{arg.python_local_type}}]{%else%}{{arg.python_local_type}}{%endif%}{%if arg.description%} = Field(description="{{arg.description}}"){%endif%}
    {%-endfor%}
{%endif-%}
{%endfor%}

{%-for prop_name, prop in stinger.properties.items()%}
class {{prop_name|UpperCamelCase}}Property(BaseModel):
    """ Interface property `{{prop_name}}` (multi-value struct).{%if prop.documentation%}
    
    {{prop.documentation}}{%endif%}
    """
    {%for arg in prop.arg_list-%}
    {%-if arg.arg_type.name.lower() == 'primitive' -%}
    {{arg.name}}: {%if arg.optional%}Optional[{{arg.python_local_type}}]{%else%}{{arg.python_local_type}}{%endif%}{%if arg.description%} = Field(description="{{arg.description}}"){%endif%}
    {%elif arg.arg_type.name.lower() == 'enum'-%}
    {{arg.name}}: {%if arg.optional%}Optional[{{arg.python_local_type}}]{%else%}{{arg.python_local_type}}{%endif%}{%if arg.description%} = Field(description="{{arg.description}}"){%endif%}
    {%elif arg.arg_type.name.lower() == 'struct'-%}
    {{arg.name}}: {%if arg.optional%}Optional[{{arg.python_local_type}}]{%else%}{{arg.python_local_type}}{%endif%}{%if arg.description%} = Field(description="{{arg.description}}"){%endif%}
    {%elif arg.arg_type.name.lower() == 'datetime'-%}
    {{arg.name}}: {%if arg.optional%}Optional[datetime]{%else%}datetime{%endif%}{%if arg.description%} = Field(description="{{arg.description}}"){%endif%}
    {%elif arg.arg_type.name.lower() == 'duration'-%}
    {{arg.name}}: {%if arg.optional%}Optional[timedelta]{%else%}timedelta{%endif%}{%if arg.description%} = Field(description="{{arg.description}}"){%endif%}
    {%elif arg.arg_type.name.lower() == 'binary'-%}
    {{arg.name}}: {%if arg.optional%}Optional[bytes]{%else%}bytes{%endif%}{%if arg.description%} = Field(description="{{arg.description}}"){%endif%}
    {%endif-%}
    {%endfor%}
{%endfor%}

{%- for method_name, method in stinger.methods.items()%}
class {{method_name|UpperCamelCase}}MethodRequest(BaseModel):
    """ Interface method `{{method_name}}` request object. {%if method.documentation%}

    {{method.documentation}}{%endif%}
    """
    {%-for arg in method.arg_list%}
    {{arg.name}}: {%if arg.optional%}Optional[{{arg.python_local_type}}]{%else%}{{arg.python_local_type}}{%endif%}{%if arg.description%} = Field(description="{{arg.description}}"){%endif%}
    {%-endfor%}
    {%if method.return_value_type == false%}
    pass
    {%endif%}

class {{method_name|UpperCamelCase}}MethodResponse(BaseModel):
    """ Interface method `{{method_name}}` response object. {%if method.documentation%}

    {{method.documentation}}{%endif%}
    """
    {%-for arg in method.return_arg_list%}
    {{arg.name}}: {%if arg.optional%}Optional[{{arg.python_local_type}}]{%else%}{{arg.python_local_type}}{%endif%}{%if arg.description%} = Field(description="{{arg.description}}"){%endif%}
    {%-endfor%}
    {%if method.return_value_type == false%}
    pass
    {%endif%}
{%endfor%}