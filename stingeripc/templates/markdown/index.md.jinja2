# _{{stinger.name}}_ API Overview 

{{stinger.description}}

{%if stinger.signals | length > 0 %}
## Signals

Signals are messages from the server to clients.

```plantuml
@startuml
Client <<- Server : Signal(Parameters)
@enduml
```
{%for sig_name, signal in stinger.signals.items()%}
### {{sig_name}}

{{signal.documentation or "_No documentation for this signal_"}}

#### Signal Parameters

|Name           |Type      |Description|
|---------------|----------|-----------|
{%-for arg in signal.arg_list%}
|{{arg.name|center(15)}}|{%if arg.arg_type.name.lower() == "enum"%}{{arg.markdown_type|center(10)}}{%else%}{{arg.json_type|center(10)}}{%endif%}|{{arg.description or ''}}|{%endfor%}

{%endfor%}
{%endif%}

{#- ------------------------------------------------------- -#}
{%if stinger.methods | length > 0 %}
## Methods

Methods are requests from a client to a server and the server provides a response back to the client:

```plantuml
@startuml
Client ->> Server : Request(Parameters)
Client <<-- Server: Response(Parameters)
@enduml
```

{%for method_name, method in stinger.methods.items()%}
### {{method_name}}

{{method.documentation or "_No documentation for this method_"}}

#### Request Parameters
{%if method.arg_list | length == 0%}
There are no arguments for this request.
{%else-%}
| Name          | Type     |Description|
|---------------|----------|-----------|
{%-for arg in method.arg_list%}
|{{arg.name|center(15)}}|{%if arg.arg_type.name.lower() == "enum"%}{{arg.markdown_type|center(10)}}{%else%}{{arg.json_type|center(10)}}{%endif%}{%if arg.optional%} (optional){%endif%}|{{arg.description or ''}}|{%endfor%}
{%endif%}{# number of args #}
#### Return Parameters

{%if method.return_value_type == "struct" %}
| Name          | Type     |Description|
|---------------|----------|-----------|
{%-for arg in method.return_value%}
|{{arg.name|center(15)}}|{%if arg.arg_type.name.lower() == "enum"%}{{arg.markdown_type|center(10)}}{%else%}{{arg.json_type|center(10)}}{%endif%}{%if arg.optional%} (optional){%endif%}|{{arg.description or ''}}|{%endfor%}{%elif method.return_value_type is false -%}
There is no return value for this method call.
{%else-%}
The return value type is `{{method.return_value.json_type}}`.
{%endif-%}
{%endfor-%}
{%endif%}
{#- ------------------------------------------------------- #}
{%if stinger.properties | length > 0 %}## Properties

Properties are values (or a set of values) held by the server.   They are re-published when the value changes. 

```plantuml
@startuml
Server -> Server : Set Property
Client <<- Server: Property Updated
@enduml
```
{%for prop_name, prop in stinger.properties.items()%}
### {{prop_name}}

{{prop.documentation or "_No documentation for this property_"}}

| Name          | Type     |Description|
|---------------|----------|-----------|
{%-for arg in prop.arg_list%}
|{{arg.name|center(15) -}}
                |{%if arg.arg_type.name.lower() == "enum"%}{{arg.markdown_type|center(10)}}
                 {%-else%}{{arg.json_type|center(10)}}
                 {%-endif%}
                 {%-if arg.optional%} (optional){%endif -%}
                           |{{arg.description or ''}}|
{%-endfor%}{# iterate over arguments for table #}
{%endfor%}{# for each property #}
{%endif%}{#end condition that there are a number of properties#}
{%if stinger.enums | length > 0%}## Enums
{%endif%}
{%for ie_name, ie in stinger.enums.items() %}
{#- ------------------------------------------------------- -#}
### Enum `{{ie.class_name }}`

<a name="Enum-{{ie.class_name}}"></a>{{ie.description or "_No description exists for this enumeration._"}}

{%for value in ie.values -%}
* {{value}} ({{loop.index}}) 
{%- if ie.value_descriptions and ie.value_descriptions|length >= loop.index %}
  - {{ie.value_descriptions[loop.index0]}}{% endif %}
{%endfor%}
{%endfor%}
{#- ------------------------------------------------------- #}
## Structures

Structures are a group of values and may be used as an argument in signals, methods, or properties.  Defining a structure allows for easy reuse.
{%for istruct_name, istruct in stinger.structs.items() %}
### Struct `{{istruct.class_name }}`

<a name="Enum-{{istruct.class_name}}"></a>{{istruct.description or "_No general description exists for this structure_"}}

| Name          | Type     |Description|
|---------------|----------|-----------|
{%-for arg in istruct.members%}
|{{arg.name|center(15)}}|{%if arg.arg_type.name.lower() == "enum"%}{{arg.markdown_type|center(10)}}{%else%}{{arg.json_type|center(10)}}{%endif%}{%if arg.optional%} (optional){%endif%}|{{arg.description or ''}}|{%endfor%}
{%endfor%}
